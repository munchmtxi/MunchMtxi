# load-test.yml
config:
  target: "https://api.munchmtxi.com"
  phases:
    - name: "Warm up"
      duration: 30
      arrivalRate: 20
    - name: "Ramp up"
      duration: 60
      arrivalRate: 20
      rampTo: 100
    - name: "Sustained load"
      duration: 180
      arrivalRate: 100
    - name: "Peak load"
      duration: 60
      arrivalRate: 200

  socketio:
    transports: ["websocket"]
    query:
      EIO: "4"
    headers:
      Authorization: "Bearer {{token}}"

  variables:
    token: "testUserToken"

scenarios:
  - name: "Order flow with real-time updates"
    flow:
      # Create order
      - post:
          url: "/api/orders"
          json:
            items:
              - id: "item1"
                quantity: 2
            deliveryAddress: "123 Test St"
          capture:
            json: "$.orderId"
            as: "orderId"
      
      # Connect to socket
      - socket:
          connect: true
      
      # Listen for order status updates
      - socket:
          emit:
            channel: "order:track"
            data: "{{ orderId }}"
          expect:
            - channel: "order:status"
              data:
                orderId: "{{ orderId }}"
                status: "CONFIRMED"
            - channel: "order:status"
              data:
                orderId: "{{ orderId }}"
                status: "PREPARING"
      
      # Simulate real-time tracking
      - think: 5
      
      # Disconnect socket
      - socket:
          disconnect: true

  - name: "Driver location tracking"
    flow:
      # Authenticate driver
      - post:
          url: "/api/auth/driver/login"
          json:
            email: "testdriver@munchmtxi.com"
            password: "testpass"
          capture:
            json: "$.token"
            as: "driverToken"
      
      # Connect to socket with driver token
      - socket:
          connect: true
          headers:
            Authorization: "Bearer {{ driverToken }}"
      
      # Send location updates
      - loop:
          - socket:
              emit:
                channel: "driver:location"
                data:
                  latitude: "{{ $randomNumber(40, 41) }}"
                  longitude: "{{ $randomNumber(-74, -73) }}"
          - think: 1
        count: 10

  - name: "Table booking and quick links"
    flow:
      # Book table
      - post:
          url: "/api/bookings"
          json:
            date: "2024-02-01"
            time: "19:00"
            guests: 4
          capture:
            json: "$.bookingId"
            as: "bookingId"
      
      # Connect to socket
      - socket:
          connect: true
      
      # Use quick links
      - loop:
          - socket:
              emit:
                channel: "quickLink:request"
                data:
                  type: "{{ $randomItem(['ASSISTANCE', 'BILL', 'ORDER']) }}"
                  bookingId: "{{ bookingId }}"
          - think: 2
        count: 5

processors:
  - function: "generateToken"
    js: |
      function generateToken(userContext, events, done) {
        // Implementation for generating test tokens
        done();
      }

plugins:
  statsd:
    host: localhost
    port: 8125
    prefix: "munchmtxi.loadtest"